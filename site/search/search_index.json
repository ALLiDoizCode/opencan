{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md img/","title":"Introduction"},{"location":"#introduction","text":"For full documentation visit mkdocs.org .","title":"Introduction"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md img/","title":"Project layout"},{"location":"DIP20/","text":"DIP720 DIP20 token canisters manage and track fungible tokens . fungible tokens are completely interchangeable with each other. They hold the same value and are used for making payments and tracking balances. This is the vast majority of crypto currencies like BTC, and ETH.","title":"DIP720"},{"location":"DIP20/#dip720","text":"DIP20 token canisters manage and track fungible tokens . fungible tokens are completely interchangeable with each other. They hold the same value and are used for making payments and tracking balances. This is the vast majority of crypto currencies like BTC, and ETH.","title":"DIP720"},{"location":"DIP721/","text":"DIP721","title":"DIP721"},{"location":"DIP721/#dip721","text":"","title":"DIP721"},{"location":"Fungible%20Token/","text":"Fungible Token fhfasdiujfhdasuidhasiudhas9iudhasiuodhasudhasiudhasiudhaisudhasiudhasiudhasiudhasiudhasihdiasda","title":"Fungible Token"},{"location":"Fungible%20Token/#fungible-token","text":"fhfasdiujfhdasuidhasiudhas9iudhasiuodhasudhasiudhasiudhaisudhasiudhasiudhasiudhasiudhasihdiasda","title":"Fungible Token"},{"location":"Getting%20Started/","text":"Getting Started Requirements Install the beta version of the DFINITY Canister SDK DFX_VERSION=0.7.0-beta.8 sh -ci \"$(curl -fsSL https://sdk.dfinity.org/install.sh)\" Get Started With NPM: npx create-ic-app After the setup is done cd test-project npm install Start the backend dfx start --background dfx canister create --all dfx build dfx canister install --all Start the frontend npm run dev Thats it! The counter demo is persisted on your local Internet Computer. [Experimental] Watch mode for canisters This will auto build and install your canisters whenever you make a change to them npm run watch Adding / Removing / Renaming Canisters You will have to edit 3 files: dfx.json tsconfig.json src/agent.ts More detailed instructions later. For now see how it's done in those files for the example counter canister. Deploying Asset Canister Run the following commands dfx build dfx canister install --all --mode=reinstall Then grab the asset canister ID from the output. Shown here: Now you can visit the following url in your browser to see it running on your local internet computer: http://localhost:8000?canisterId=<CopiedCanisterId> Community templates / Contributions Want to contribute your own template? Find something that could be improved? Repo is open for PRs! Happy to assist you in this. You'll receive full credit for your contribution of course. Contributions @ferMartz (React JS + Tailwind template)","title":"Getting Started"},{"location":"Getting%20Started/#getting-started","text":"","title":"Getting Started"},{"location":"Getting%20Started/#requirements","text":"Install the beta version of the DFINITY Canister SDK DFX_VERSION=0.7.0-beta.8 sh -ci \"$(curl -fsSL https://sdk.dfinity.org/install.sh)\"","title":"Requirements"},{"location":"Getting%20Started/#get-started","text":"With NPM: npx create-ic-app After the setup is done cd test-project npm install Start the backend dfx start --background dfx canister create --all dfx build dfx canister install --all Start the frontend npm run dev Thats it! The counter demo is persisted on your local Internet Computer.","title":"Get Started"},{"location":"Getting%20Started/#experimental-watch-mode-for-canisters","text":"This will auto build and install your canisters whenever you make a change to them npm run watch","title":"[Experimental] Watch mode for canisters"},{"location":"Getting%20Started/#adding-removing-renaming-canisters","text":"You will have to edit 3 files: dfx.json tsconfig.json src/agent.ts More detailed instructions later. For now see how it's done in those files for the example counter canister.","title":"Adding / Removing / Renaming Canisters"},{"location":"Getting%20Started/#deploying-asset-canister","text":"Run the following commands dfx build dfx canister install --all --mode=reinstall Then grab the asset canister ID from the output. Shown here: Now you can visit the following url in your browser to see it running on your local internet computer: http://localhost:8000?canisterId=<CopiedCanisterId>","title":"Deploying Asset Canister"},{"location":"Getting%20Started/#community-templates-contributions","text":"Want to contribute your own template? Find something that could be improved? Repo is open for PRs! Happy to assist you in this. You'll receive full credit for your contribution of course.","title":"Community templates / Contributions"},{"location":"Getting%20Started/#contributions","text":"@ferMartz (React JS + Tailwind template)","title":"Contributions"}]}